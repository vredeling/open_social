<?php

/**
 * @file
 * The Social Album module.
 */

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\StringTranslation\TranslatableMarkup;
use Drupal\social_album\Form\SocialAlbumImageForm;
use Drupal\social_album\Form\SocialAlbumPostForm;

/**
 * Implements hook_entity_extra_field_info().
 */
function social_album_entity_extra_field_info() {
  return [
    'node' => [
      'album' => [
        'display' => [
          'social_album_images' => [
            'label' => t('Images'),
            'visible' => FALSE,
          ],
        ],
      ],
    ],
  ];
}

/**
 * Implements hook_entity_view().
 */
function social_album_entity_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  if ($display->getComponent('social_album_images')) {
    $build['social_album_images'] = views_embed_view('albums', 'embed_album_overview');
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function social_album_preprocess_block__social_post(&$variables) {
  if (
    \Drupal::routeMatch()->getRouteName() === 'social_album.post' &&
    ($content = \Drupal::service('social_post.helper')->buildCurrentUserImage())
  ) {
    $variables['content'] = [
      'form' => $variables['content'],
      'current_user_image' => $content,
    ];
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function social_album_preprocess_node(&$variables) {
  /** @var \Drupal\node\NodeInterface $node */
  $node = $variables['node'];

  if (
    $node->bundle() === 'album' &&
    $variables['view_mode'] === 'teaser' &&
    views_get_view_result('albums', 'embed_album_cover', $node->id())
  ) {
    $variables['node_image'] = views_embed_view('albums', 'embed_album_cover', $node->id());
    $variables['no_image'] = FALSE;
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function social_album_preprocess_views_view(&$variables) {
  /** @var \Drupal\views\ViewExecutable $view */
  $view = $variables['view'];

  if ($view->id() === 'albums') {
    $library = [
      'embed_album_overview' => 'socialbase/stream',
      'page_albums_overview' => 'social_album/social_album_teaser',
    ];

    if (isset($library[$view->current_display])) {
      $variables['#attached']['library'][] = $library[$view->current_display];
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function social_album_post_insert(EntityInterface $entity) {
  /** @var \Drupal\social_post\Entity\PostInterface $entity */
  if ($entity->bundle() === 'photo' && !$entity->field_album->isEmpty()) {
    \Drupal::service('cache_tags.invalidator')->invalidateTags([
      'node:' . $entity->field_album->entity->id(),
      'user:' . $entity->getOwnerId(),
    ]);
  }
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function social_album_node_insert(EntityInterface $entity) {
  /** @var \Drupal\node\NodeInterface $entity */
  if ($entity->bundle() === 'album') {
    \Drupal::service('cache_tags.invalidator')->invalidateTags([
      'user:' . $entity->getOwnerId(),
    ]);
  }
}

/**
 * Implements hook_social_post_message_alter().
 */
function social_album_social_post_message_alter(TranslatableMarkup &$message, FormStateInterface $form_state) {
  if ($form_state->has('album')) {
    $post = $form_state->getFormObject()->getEntity();

    if (!$post->field_album->isEmpty()) {
      $message = t('You have posted successfully in your new album @link', [
        '@link' => $post->field_album->entity->toLink()->toString(),
      ]);
    }
  }
}

/**
 * Implements hook_entity_type_alter().
 */
function social_album_entity_type_alter(array &$entity_types) {
  /** @var \Drupal\Core\Entity\EntityTypeInterface[] $entity_types */
  $entity_types['post']
    ->setFormClass('first_in_album', SocialAlbumPostForm::class)
    ->setFormClass('delete_image', SocialAlbumImageForm::class);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function social_album_form_post_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (\Drupal::routeMatch()->getRouteName() === 'social_album.post') {
    if (isset($form['current_user_image'])) {
      unset($form['current_user_image']);
    }
  }
  elseif (isset($form['field_album'])) {
    $form['field_album']['#states'] = [
      'visible' => [
        ':input[name="field_post_image[0][fids]"]' => [
          'filled' => TRUE,
        ],
      ],
    ];
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function social_album_form_node_album_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['actions']['submit']['#submit'][] = '_social_album_create_post';
}

/**
 * Implements hook_views_data().
 */
function social_album_views_data() {
  return [
    \Drupal::entityTypeManager()->getStorage('post')->getEntityType()->getBaseTable() => [
      'post_operations' => [
        'field' => [
          'title' => t('Post operations links'),
          'help' => t('Provides links to perform post operations.'),
          'id' => 'social_album_post_operations',
        ],
      ],
    ],
  ];
}

/**
 * Open post creation form after saving the album node.
 *
 * @param array $form
 *   An associative array containing the structure of the form.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The current state of the form.
 */
function _social_album_create_post(array $form, FormStateInterface $form_state) {
  if ($form_state->getRedirect()) {
    $form_state->setRedirect('social_album.post', [
      'node' => $form_state->getFormObject()->getEntity()->id(),
    ]);
  }
}
